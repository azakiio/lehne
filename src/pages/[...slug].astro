---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import Slider from "~/components/Slider.astro";
import MarkdownLayout from "~/layouts/MarkdownLayout.astro";
import { shuffle } from "lodash-es";
// 1. Get the slug from the incoming server request
const { slug } = Astro.params;
if (slug === undefined) {
  throw new Error("Slug is required");
}

// 2. Query for the entry directly using the request slug
const entry = await getEntry("projects", slug);
// 3. Redirect if the entry does not exist
if (entry === undefined) {
  return Astro.redirect("/404");
}
const relatedPosts = shuffle(
  await getCollection("projects", (post) => {
    const start = slug.slice(0, slug.lastIndexOf("/"));
    if (slug === post.slug) {
      return false;
    }
    return post.slug.startsWith(start);
  })
).slice(0, 3);

// 4. (Optional) Render the entry to HTML in the template
const { Content } = await entry.render();
const projectsHeader = slug.startsWith("en/")
  ? "More projects from this area"
  : "Weitere Projekte aus diesem Bereich";
---

<MarkdownLayout title={entry.data.title}>
  <h1>{entry.data.title}</h1>

  {
    entry.data.images && entry.data.images?.length > 1 ? (
      <Slider id="slider" images={entry.data.images} />
    ) : (
      <Image src={entry.data.images?.[0]!} alt="" />
    )
  }

  <Content />

  <h3 class="mt-24 text-primary">{projectsHeader}</h3>
  <div class="grid sm:grid-cols-2 md:grid-cols-3 gap-4vmin py-6">
    {
      relatedPosts.map(({ data, slug }) => (
        <a href={`/${slug}`} class="card">
          {data.images?.[0] && (
            <Image class="background" src={data.images?.[0]} alt="" />
          )}
          <div class="text-white text-lg drop-shadow-lg">{data.title}</div>
        </a>
      ))
    }
  </div>
</MarkdownLayout>
